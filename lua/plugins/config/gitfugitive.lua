-------------------------------Mappings-------------------------------
local opts = {
    noremap = true
}

vim.keymap.set('n', '<Leader>gi', ':Git init<CR>', opts)
vim.keymap.set('n', '<Leader>gd', ':Gvdiffsplit<CR>', opts)
vim.keymap.set('n', '<Leader>gds', ':Git diff --staged<CR>', opts)
vim.keymap.set('n', '<Leader>gst', ':Git status<CR>', opts)
vim.keymap.set('n', '<Leader>gad', ':Git add .<CR>', opts)
vim.keymap.set('n', '<Leader>gcl', ':Git clone ', opts)
vim.keymap.set('n', '<Leader>gch', ':Git checkout ', opts)
vim.keymap.set('n', '<Leader>gct', ':Git commit -m "', opts)
vim.keymap.set('n', '<Leader>gca', ':Git commit --amend -m "', opts)
vim.keymap.set('n', '<Leader>gph', ':Git push<CR>', opts)
vim.keymap.set('n', '<Leader>gpd', ':Git push origin --delete ', opts)
vim.keymap.set('n', '<Leader>gpu', ':Git push -u ', opts)
vim.keymap.set('n', '<Leader>gps', ':Git push --set-upstream ', opts)
vim.keymap.set('n', '<Leader>gpl', ':Git pull<CR>', opts)
vim.keymap.set('n', '<Leader>gs', ':Git stash<CR>', opts)
vim.keymap.set('n', '<Leader>gsp', ':Git stash pop<CR>', opts)
vim.keymap.set('n', '<Leader>gl', ':Git log<CR>', opts)
vim.keymap.set('n', '<Leader>glf', ':Git log --follow ', opts)
vim.keymap.set('n', '<Leader>gme', ':Git merge ', opts)
vim.keymap.set('n', '<Leader>grs', ':Git restore --staged ', opts)
vim.keymap.set('n', '<Leader>grss', ':Git reset --soft ', opts)
vim.keymap.set('n', '<Leader>grh', ':Git reset --hard ', opts)
vim.keymap.set('n', '<Leader>grao', ':Git remote add origin ', opts)
vim.keymap.set('n', '<Leader>gres', ':Git restore ', opts)
vim.keymap.set('n', '<Leader>grev', ':Git revert ', opts)
vim.keymap.set('n', '<Leader>gbl', ':Git branch --list<CR>', opts)
vim.keymap.set('n', '<Leader>gbn', ':Git branch ', opts)
vim.keymap.set('n', '<Leader>gbm', ':Git branch -m ', opts)
vim.keymap.set('n', '<Leader>gbmm', ':Git branch -M ', opts)
vim.keymap.set('n', '<Leader>gbd', ':Git branch -d ', opts)
vim.keymap.set('n', '<Leader>gbdd', ':Git branch -D ', opts)
vim.keymap.set('n', '<Leader>gbb', ':Git blame<CR>', opts)
